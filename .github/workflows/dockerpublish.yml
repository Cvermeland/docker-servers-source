name: 'Tests'

on: # yamllint disable-line rule:truthy
  pull_request:
    branches:
      - '*'
  push: {}

jobs:
  Config-test:
    runs-on: 'ubuntu-latest'
    steps:
      - uses: 'actions/checkout@v2'
      - name: 'Run tests'
        run: './test.sh'
      - uses: 'actions/upload-artifact@v2'
        if: 'failure()'
        with:
          name: 'test-artifacts'
          path: |
            log.log
  Health-checks-traefik:
    env:
      SERVICE: 'traefik'
    runs-on: 'ubuntu-latest'
  Health-checks-nginx:
    env:
      SERVICE: 'nginx'
    runs-on: 'ubuntu-latest'
    steps:
      - uses: 'actions/checkout@v2'
      - name: 'Caching'
        uses: 'actions/cache@v2'
        with:
          path: '/var/lib/docker/'
          key: '${{ runner.os }}-health-${{ github.job }}'
      - name: 'Build the docker-compose stack'
        run: 'docker-compose -f docker-compose.yml -f ${SERVICE}/docker-compose.${SERVICE}.yml up -d'
      - name: 'Waiting for service startup (10s)'
        run: 'sleep 10s'
      - name: 'Check running containers'
        run: 'docker-compose -f docker-compose.yml -f ${SERVICE}/docker-compose.${SERVICE}.yml ps'
      - name: 'Check health'
        run: 'docker-compose -f docker-compose.yml -f ${SERVICE}/docker-compose.${SERVICE}.yml ps | grep "Up (healthy)"'
      - name: 'Export logs'
        if: '${{ failure() }}'
        run: 'docker-compose -f docker-compose.yml -f ${SERVICE}/docker-compose.${SERVICE}.yml logs'
  Health-checks-hugo:
    env:
      SERVICE: 'hugo'
    runs-on: 'ubuntu-latest'
    steps:
      - uses: 'actions/checkout@v2'
      - name: 'Caching'
        uses: 'actions/cache@v2'
        with:
          path: '/var/lib/docker/'
          key: '${{ runner.os }}-health-${{ github.job }}'
      - name: 'Build the docker-compose stack'
        run: 'docker-compose -f docker-compose.yml -f ${SERVICE}/docker-compose.${SERVICE}.yml up -d'
      - name: 'Waiting for service startup (10s)'
        run: 'sleep 10s'
      - name: 'Check running containers'
        run: 'docker-compose -f docker-compose.yml -f ${SERVICE}/docker-compose.${SERVICE}.yml ps'
      - name: 'Check health'
        run: 'docker-compose -f docker-compose.yml -f ${SERVICE}/docker-compose.${SERVICE}.yml ps | grep "Up (healthy)"'
      - name: 'Export logs'
        if: '${{ failure() }}'
        run: 'docker-compose -f docker-compose.yml -f ${SERVICE}/docker-compose.${SERVICE}.yml logs'
  Health-checks-peertube:
    env:
      SERVICE: 'peertube'
    runs-on: 'ubuntu-latest'
    steps:
      - uses: 'actions/checkout@v2'
      - name: 'Caching'
        uses: 'actions/cache@v2'
        with:
          path: '/var/lib/docker/'
          key: '${{ runner.os }}-health-${{ github.job }}'
      - name: 'Build the docker-compose stack'
        run: 'docker-compose -f docker-compose.yml -f ${SERVICE}/docker-compose.${SERVICE}.yml up -d'
      - name: 'Waiting for service startup (10s)'
        run: 'sleep 10s'
      - name: 'Check running containers'
        run: 'docker-compose -f docker-compose.yml -f ${SERVICE}/docker-compose.${SERVICE}.yml ps'
      - name: 'Check health'
        run: 'docker-compose -f docker-compose.yml -f ${SERVICE}/docker-compose.${SERVICE}.yml ps | grep "Up (healthy)"'
      - name: 'Export logs'
        if: '${{ failure() }}'
        run: 'docker-compose -f docker-compose.yml -f ${SERVICE}/docker-compose.${SERVICE}.yml logs'
  Health-checks-transmission:
    env:
      SERVICE: 'transmission'
    runs-on: 'ubuntu-latest'
    steps:
      - uses: 'actions/checkout@v2'
      - name: 'Caching'
        uses: 'actions/cache@v2'
        with:
          path: '/var/lib/docker/'
          key: '${{ runner.os }}-health-${{ github.job }}'
      - name: 'Build the docker-compose stack'
        run: 'docker-compose -f docker-compose.yml -f ${SERVICE}/docker-compose.${SERVICE}.yml up -d'
      - name: 'Waiting for service startup (10s)'
        run: 'sleep 10s'
      - name: 'Check running containers'
        run: 'docker-compose -f docker-compose.yml -f ${SERVICE}/docker-compose.${SERVICE}.yml ps'
      - name: 'Check health'
        run: 'docker-compose -f docker-compose.yml -f ${SERVICE}/docker-compose.${SERVICE}.yml ps | grep "Up (healthy)"'
      - name: 'Export logs'
        if: '${{ failure() }}'
        run: 'docker-compose -f docker-compose.yml -f ${SERVICE}/docker-compose.${SERVICE}.yml logs'
  Health-checks-nextcloud:
    env:
      SERVICE: 'nextcloud'
    runs-on: 'ubuntu-latest'
    steps:
      - uses: 'actions/checkout@v2'
      - name: 'Caching'
        uses: 'actions/cache@v2'
        with:
          path: '/var/lib/docker/'
          key: '${{ runner.os }}-health-${{ github.job }}'
      - name: 'Build the docker-compose stack'
        run: 'docker-compose -f docker-compose.yml -f ${SERVICE}/docker-compose.${SERVICE}.yml up -d'
      - name: 'Waiting for service startup (10s)'
        run: 'sleep 10s'
      - name: 'Check running containers'
        run: 'docker-compose -f docker-compose.yml -f ${SERVICE}/docker-compose.${SERVICE}.yml ps'
      - name: 'Check health'
        run: 'docker-compose -f docker-compose.yml -f ${SERVICE}/docker-compose.${SERVICE}.yml ps | grep "Up (healthy)"'
      - name: 'Export logs'
        if: '${{ failure() }}'
        run: 'docker-compose -f docker-compose.yml -f ${SERVICE}/docker-compose.${SERVICE}.yml logs'
  Health-checks-jackett:
    env:
      SERVICE: 'jackett'
    runs-on: 'ubuntu-latest'
    steps:
      - uses: 'actions/checkout@v2'
      - name: 'Caching'
        uses: 'actions/cache@v2'
        with:
          path: '/var/lib/docker/'
          key: '${{ runner.os }}-health-${{ github.job }}'
      - name: 'Build the docker-compose stack'
        run: 'docker-compose -f docker-compose.yml -f ${SERVICE}/docker-compose.${SERVICE}.yml up -d'
      - name: 'Waiting for service startup (10s)'
        run: 'sleep 10s'
      - name: 'Check running containers'
        run: 'docker-compose -f docker-compose.yml -f ${SERVICE}/docker-compose.${SERVICE}.yml ps'
      - name: 'Check health'
        run: 'docker-compose -f docker-compose.yml -f ${SERVICE}/docker-compose.${SERVICE}.yml ps | grep "Up (healthy)"'
      - name: 'Export logs'
        if: '${{ failure() }}'
        run: 'docker-compose -f docker-compose.yml -f ${SERVICE}/docker-compose.${SERVICE}.yml logs'
  Health-checks-codimd:
    env:
      SERVICE: 'codimd'
    runs-on: 'ubuntu-latest'
    steps:
      - uses: 'actions/checkout@v2'
      - name: 'Caching'
        uses: 'actions/cache@v2'
        with:
          path: '/var/lib/docker/'
          key: '${{ runner.os }}-health-${{ github.job }}'
      - name: 'Build the docker-compose stack'
        run: 'docker-compose -f docker-compose.yml -f ${SERVICE}/docker-compose.${SERVICE}.yml up -d'
      - name: 'Waiting for service startup (10s)'
        run: 'sleep 10s'
      - name: 'Check running containers'
        run: 'docker-compose -f docker-compose.yml -f ${SERVICE}/docker-compose.${SERVICE}.yml ps'
      - name: 'Check health'
        run: 'docker-compose -f docker-compose.yml -f ${SERVICE}/docker-compose.${SERVICE}.yml ps | grep "Up (healthy)"'
      - name: 'Export logs'
        if: '${{ failure() }}'
        run: 'docker-compose -f docker-compose.yml -f ${SERVICE}/docker-compose.${SERVICE}.yml logs'
  Lint:
    runs-on: 'ubuntu-latest'
    steps:
      - uses: 'actions/checkout@v2'
      - name: 'Install yamllint'
        run: 'pip install yamllint'
      - name: 'yamllint version'
        run: 'yamllint --version'
      - name: 'Lint YAML files'
        run: 'yamllint --format github .'

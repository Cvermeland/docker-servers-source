version: '2'

services:
  peertube:
    image: chocobozzz/peertube:production-buster
    environment:
      - 'PEERTUBE_DB_USERNAME=peertube'
      - 'PEERTUBE_DB_PASSWORD=${USERS}'
      - 'PEERTUBE_DB_HOSTNAME=peertube-db'
      - 'PEERTUBE_WEBSERVER_HOSTNAME=peertube.${SITE}'
      - 'PEERTUBE_WEBSERVER_PORT=443'
      - 'PEERTUBE_WEBSERVER_HTTPS=true'
      - 'PEERTUBE_ADMIN_EMAIL=admin@${SITE}'
      - 'PEERTUBE_TRUST_PROXY=["127.0.0.1", "loopback", "172.18.0.0/16"]'
    volumes:
      - ./peertube/data:/data
      - ./peertube/config:/config
    depends_on:
      - peertube-db
      - peertube-redis
    links:
      - peertube-db
      - peertube-redis
    networks:
      - 'srv'
    restart: always
    labels:
      - 'traefik.enable=true'
      - 'traefik.frontend.rule=Host:peertube.${SITE}'
      - 'traefik.port=9000'

  peertube-db: # peertube-db
    image: postgres:10-alpine
    environment:
      - 'POSTGRES_USER=peertube'
      - 'POSTGRES_PASSWORD=${USERS}'
      - 'POSTGRES_DB=peertube'
    networks:
      - 'srv'
    volumes:
      - ./peertube/db:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD', 'pg_isready']
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always
    labels:
      - 'traefik.enable=false'

  peertube-redis: # peertube-redis
    image: redis:4-alpine
    networks:
      - 'srv'
    volumes:
      - ./peertube/redis:/data
    restart: always
    healthcheck:
      test: ['CMD', 'redis-cli', 'PING']
      interval: 10s
      timeout: 10s
      retries: 5
    labels:
      - 'traefik.enable=false'

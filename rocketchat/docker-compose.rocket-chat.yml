version: '2'

networks:
  rocketchat-internal: {}

services:
  rocketchat:
    image: 'rocket.chat:latest'
    depends_on:
      - 'rocketchat-mongo'
      - 'rocketchat-mongo-replica' # replica is mandatory
    environment:
      MONGO_OPLOG_URL: 'mongodb://rocketchat-mongo:27017/local'
      MONGO_URL: 'mongodb://rocketchat-mongo:27017/rocketchat'
      ROOT_URL: 'https://rocketchat.${SITE:-localhost}'
    labels:
      traefik.enable: true
      traefik.http.routers.rocketchat.rule: 'Host(`rocketchat.${SITE:-localhost}`)'
      traefik.http.services.rocketchat.loadbalancer.server.port: 3000
    networks:
      - 'rocketchat-internal'
      - 'srv'
    restart: 'unless-stopped'
    volumes:
      - './rocketchat/uploads:/app/uploads'

  # hubot, the popular chatbot (add the bot user first and change the password
  # before starting this image)
  rocketchat-hubot:
    image: 'rocketchat/hubot-rocketchat:latest'
    depends_on:
      - 'rocketchat'
    environment:
      BOT_NAME: 'bot'
      # you can add more scripts as you'd like here, they need to be
      # installable by npm
      # EXTERNAL_SCRIPTS: 'hubot-help,hubot-seen,hubot-links,hubot-diagnostics'
      ROCKETCHAT_PASSWORD: 'botpassword'
      ROCKETCHAT_ROOM: 'GENERAL'
      ROCKETCHAT_URL: 'rocketchat:3000'
      ROCKETCHAT_USER: 'bot'
    labels:
      traefik.enable: false
    # this is used to expose the hubot port for notifications on the host on
    # port 3001, e.g. for hubot-jenkins-notifier
    # ports:
    #   - '3001:8080'
    restart: 'unless-stopped'
    volumes:
      - './rocketchat/scripts:/home/hubot/scripts'

  rocketchat-mongo:
    image: 'mongo:4.0'
    command: 'mongod --smallfiles --oplogSize 128 --replSet rs01'
    healthcheck:
      test: ['CMD', 'echo', 'db.runCommand("ping").ok',
             '|', 'mongo', 'localhost:27017/test', '--quiet']
    labels:
      traefik.enable: false
    networks:
      - 'rocketchat-internal'
    restart: 'unless-stopped'
    volumes:
      - './rocketchat/db/:/data/db'

  rocketchat-mongo-replica:
    image: 'mongo:4.0'
    command: |
      mongo rocketchat-mongo/rocketchat --eval
      "rs.initiate({ _id: ''rs01'',
      members: [ { _id: 0, host: ''rocketchat-mongo:27017'' } ]})"
    depends_on:
      - 'rocketchat-mongo'
    labels:
      traefik.enable: false
    networks:
      - 'rocketchat-internal'
